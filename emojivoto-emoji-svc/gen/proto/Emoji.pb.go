// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/Emoji.proto

package emojivoto_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Emoji struct {
	Unicode              string   `protobuf:"bytes,1,opt,name=unicode,proto3" json:"unicode,omitempty"`
	Shortcode            string   `protobuf:"bytes,2,opt,name=shortcode,proto3" json:"shortcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Emoji) Reset()         { *m = Emoji{} }
func (m *Emoji) String() string { return proto.CompactTextString(m) }
func (*Emoji) ProtoMessage()    {}
func (*Emoji) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a46753720f8315, []int{0}
}

func (m *Emoji) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Emoji.Unmarshal(m, b)
}
func (m *Emoji) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Emoji.Marshal(b, m, deterministic)
}
func (m *Emoji) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Emoji.Merge(m, src)
}
func (m *Emoji) XXX_Size() int {
	return xxx_messageInfo_Emoji.Size(m)
}
func (m *Emoji) XXX_DiscardUnknown() {
	xxx_messageInfo_Emoji.DiscardUnknown(m)
}

var xxx_messageInfo_Emoji proto.InternalMessageInfo

func (m *Emoji) GetUnicode() string {
	if m != nil {
		return m.Unicode
	}
	return ""
}

func (m *Emoji) GetShortcode() string {
	if m != nil {
		return m.Shortcode
	}
	return ""
}

type ListAllEmojiRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAllEmojiRequest) Reset()         { *m = ListAllEmojiRequest{} }
func (m *ListAllEmojiRequest) String() string { return proto.CompactTextString(m) }
func (*ListAllEmojiRequest) ProtoMessage()    {}
func (*ListAllEmojiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a46753720f8315, []int{1}
}

func (m *ListAllEmojiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAllEmojiRequest.Unmarshal(m, b)
}
func (m *ListAllEmojiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAllEmojiRequest.Marshal(b, m, deterministic)
}
func (m *ListAllEmojiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAllEmojiRequest.Merge(m, src)
}
func (m *ListAllEmojiRequest) XXX_Size() int {
	return xxx_messageInfo_ListAllEmojiRequest.Size(m)
}
func (m *ListAllEmojiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAllEmojiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAllEmojiRequest proto.InternalMessageInfo

type ListAllEmojiResponse struct {
	List                 []*Emoji `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAllEmojiResponse) Reset()         { *m = ListAllEmojiResponse{} }
func (m *ListAllEmojiResponse) String() string { return proto.CompactTextString(m) }
func (*ListAllEmojiResponse) ProtoMessage()    {}
func (*ListAllEmojiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a46753720f8315, []int{2}
}

func (m *ListAllEmojiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAllEmojiResponse.Unmarshal(m, b)
}
func (m *ListAllEmojiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAllEmojiResponse.Marshal(b, m, deterministic)
}
func (m *ListAllEmojiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAllEmojiResponse.Merge(m, src)
}
func (m *ListAllEmojiResponse) XXX_Size() int {
	return xxx_messageInfo_ListAllEmojiResponse.Size(m)
}
func (m *ListAllEmojiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAllEmojiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAllEmojiResponse proto.InternalMessageInfo

func (m *ListAllEmojiResponse) GetList() []*Emoji {
	if m != nil {
		return m.List
	}
	return nil
}

type FindByShortcodeRequest struct {
	Shortcode            string   `protobuf:"bytes,1,opt,name=Shortcode,proto3" json:"Shortcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindByShortcodeRequest) Reset()         { *m = FindByShortcodeRequest{} }
func (m *FindByShortcodeRequest) String() string { return proto.CompactTextString(m) }
func (*FindByShortcodeRequest) ProtoMessage()    {}
func (*FindByShortcodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a46753720f8315, []int{3}
}

func (m *FindByShortcodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindByShortcodeRequest.Unmarshal(m, b)
}
func (m *FindByShortcodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindByShortcodeRequest.Marshal(b, m, deterministic)
}
func (m *FindByShortcodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindByShortcodeRequest.Merge(m, src)
}
func (m *FindByShortcodeRequest) XXX_Size() int {
	return xxx_messageInfo_FindByShortcodeRequest.Size(m)
}
func (m *FindByShortcodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindByShortcodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindByShortcodeRequest proto.InternalMessageInfo

func (m *FindByShortcodeRequest) GetShortcode() string {
	if m != nil {
		return m.Shortcode
	}
	return ""
}

type FindByShortcodeResponse struct {
	Emoji                *Emoji   `protobuf:"bytes,1,opt,name=Emoji,proto3" json:"Emoji,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindByShortcodeResponse) Reset()         { *m = FindByShortcodeResponse{} }
func (m *FindByShortcodeResponse) String() string { return proto.CompactTextString(m) }
func (*FindByShortcodeResponse) ProtoMessage()    {}
func (*FindByShortcodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_75a46753720f8315, []int{4}
}

func (m *FindByShortcodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindByShortcodeResponse.Unmarshal(m, b)
}
func (m *FindByShortcodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindByShortcodeResponse.Marshal(b, m, deterministic)
}
func (m *FindByShortcodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindByShortcodeResponse.Merge(m, src)
}
func (m *FindByShortcodeResponse) XXX_Size() int {
	return xxx_messageInfo_FindByShortcodeResponse.Size(m)
}
func (m *FindByShortcodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindByShortcodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindByShortcodeResponse proto.InternalMessageInfo

func (m *FindByShortcodeResponse) GetEmoji() *Emoji {
	if m != nil {
		return m.Emoji
	}
	return nil
}

func init() {
	proto.RegisterType((*Emoji)(nil), "emojivoto.v1.Emoji")
	proto.RegisterType((*ListAllEmojiRequest)(nil), "emojivoto.v1.ListAllEmojiRequest")
	proto.RegisterType((*ListAllEmojiResponse)(nil), "emojivoto.v1.ListAllEmojiResponse")
	proto.RegisterType((*FindByShortcodeRequest)(nil), "emojivoto.v1.FindByShortcodeRequest")
	proto.RegisterType((*FindByShortcodeResponse)(nil), "emojivoto.v1.FindByShortcodeResponse")
}

func init() {
	proto.RegisterFile("proto/Emoji.proto", fileDescriptor_75a46753720f8315)
}

var fileDescriptor_75a46753720f8315 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x77, 0xcd, 0xcd, 0xcf, 0xca, 0xd4, 0x03, 0xb3, 0x85, 0x78, 0x52, 0x41, 0x9c, 0x32,
	0x20, 0x53, 0xaf, 0xcc, 0x50, 0xc9, 0x9e, 0x8b, 0x15, 0x2c, 0x29, 0x24, 0xc1, 0xc5, 0x5e, 0x9a,
	0x97, 0x99, 0x9c, 0x9f, 0x92, 0x2a, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0xe3, 0x0a, 0xc9,
	0x70, 0x71, 0x16, 0x67, 0xe4, 0x17, 0x95, 0x80, 0xe5, 0x98, 0xc0, 0x72, 0x08, 0x01, 0x25, 0x51,
	0x2e, 0x61, 0x9f, 0xcc, 0xe2, 0x12, 0xc7, 0x9c, 0x1c, 0xb0, 0x39, 0x41, 0xa9, 0x85, 0xa5, 0xa9,
	0xc5, 0x25, 0x40, 0x73, 0x45, 0x50, 0x85, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xd4, 0xb9,
	0x58, 0x72, 0x80, 0xe2, 0x40, 0x3b, 0x98, 0x35, 0xb8, 0x8d, 0x84, 0xf5, 0x90, 0x1d, 0xa3, 0x07,
	0x51, 0x0a, 0x56, 0xa0, 0x64, 0xc6, 0x25, 0xe6, 0x96, 0x99, 0x97, 0xe2, 0x54, 0x19, 0x0c, 0xb3,
	0x0a, 0x6a, 0x34, 0xc8, 0x3d, 0x70, 0x31, 0xa8, 0x5b, 0x11, 0x02, 0x4a, 0x2e, 0x5c, 0xe2, 0x18,
	0xfa, 0xa0, 0x76, 0x6b, 0x42, 0xfd, 0x0a, 0xd6, 0x84, 0xc3, 0x72, 0x88, 0x0a, 0xa3, 0x03, 0x8c,
	0x5c, 0x3c, 0x60, 0x56, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa, 0x50, 0x00, 0x17, 0x3b, 0xd4,
	0x3f, 0x42, 0x8a, 0xa8, 0xfa, 0xb0, 0xf8, 0x5e, 0x4a, 0x09, 0x9f, 0x12, 0xa8, 0x6b, 0xe2, 0xb8,
	0xf8, 0xd1, 0x1c, 0x2a, 0xa4, 0x82, 0xaa, 0x0d, 0xbb, 0xff, 0xa5, 0x54, 0x09, 0xa8, 0x82, 0x98,
	0x9f, 0xc4, 0x06, 0x8e, 0x6e, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x87, 0x0b, 0x51, 0x3f,
	0x03, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EmojiServiceClient is the client API for EmojiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmojiServiceClient interface {
	ListAll(ctx context.Context, in *ListAllEmojiRequest, opts ...grpc.CallOption) (*ListAllEmojiResponse, error)
	FindByShortcode(ctx context.Context, in *FindByShortcodeRequest, opts ...grpc.CallOption) (*FindByShortcodeResponse, error)
}

type emojiServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEmojiServiceClient(cc grpc.ClientConnInterface) EmojiServiceClient {
	return &emojiServiceClient{cc}
}

func (c *emojiServiceClient) ListAll(ctx context.Context, in *ListAllEmojiRequest, opts ...grpc.CallOption) (*ListAllEmojiResponse, error) {
	out := new(ListAllEmojiResponse)
	err := c.cc.Invoke(ctx, "/emojivoto.v1.EmojiService/ListAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emojiServiceClient) FindByShortcode(ctx context.Context, in *FindByShortcodeRequest, opts ...grpc.CallOption) (*FindByShortcodeResponse, error) {
	out := new(FindByShortcodeResponse)
	err := c.cc.Invoke(ctx, "/emojivoto.v1.EmojiService/FindByShortcode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmojiServiceServer is the server API for EmojiService service.
type EmojiServiceServer interface {
	ListAll(context.Context, *ListAllEmojiRequest) (*ListAllEmojiResponse, error)
	FindByShortcode(context.Context, *FindByShortcodeRequest) (*FindByShortcodeResponse, error)
}

// UnimplementedEmojiServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEmojiServiceServer struct {
}

func (*UnimplementedEmojiServiceServer) ListAll(ctx context.Context, req *ListAllEmojiRequest) (*ListAllEmojiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAll not implemented")
}
func (*UnimplementedEmojiServiceServer) FindByShortcode(ctx context.Context, req *FindByShortcodeRequest) (*FindByShortcodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByShortcode not implemented")
}

func RegisterEmojiServiceServer(s *grpc.Server, srv EmojiServiceServer) {
	s.RegisterService(&_EmojiService_serviceDesc, srv)
}

func _EmojiService_ListAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAllEmojiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmojiServiceServer).ListAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/emojivoto.v1.EmojiService/ListAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmojiServiceServer).ListAll(ctx, req.(*ListAllEmojiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EmojiService_FindByShortcode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByShortcodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmojiServiceServer).FindByShortcode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/emojivoto.v1.EmojiService/FindByShortcode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmojiServiceServer).FindByShortcode(ctx, req.(*FindByShortcodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmojiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "emojivoto.v1.EmojiService",
	HandlerType: (*EmojiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAll",
			Handler:    _EmojiService_ListAll_Handler,
		},
		{
			MethodName: "FindByShortcode",
			Handler:    _EmojiService_FindByShortcode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/Emoji.proto",
}
