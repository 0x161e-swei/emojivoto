#
# Conduit lifecycle test configuration
#
# slow_cooker ->
#   HTTP 1.1 ->
#     bb point-to-point ->
#       gRPC ->
#         bb terminus
#

#
# slow_cooker
#
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: slow-cooker
  name: slow-cooker
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: slow-cooker
    spec:
      containers:
      - image: buoyantio/slow_cooker:1.1.0
        imagePullPolicy: IfNotPresent
        name: slow-cooker
        command:
        - "/bin/bash"
        args:
        - "-c"
        - |
          sleep 30 # wait for pods to start
          slow_cooker \
            -qps 10 \
            -concurrency 10 \
            -interval 30s \
            -metric-addr 0.0.0.0:9990 \
            http://bb-p2p:8080
        ports:
        - name: slow-cooker
          containerPort: 9990
---

#
# bb point-to-point
#
kind: Service
apiVersion: v1
metadata:
  name: bb-p2p
spec:
  clusterIP: None
  selector:
    app: bb-p2p
  ports:
  - name: bb-p2p-http1
    port: 8080
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: bb-p2p
  name: bb-p2p
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: bb-p2p
    spec:
      containers:
      - image: buoyantio/bb:v0.0.3
        imagePullPolicy: IfNotPresent
        name: bb-p2p
        command:
        - "/bin/bash"
        args:
        - "-c"
        - |
          exec \
          /out/bb point-to-point-channel \
          --grpc-downstream-server=bb-terminus:9090 \
          --h1-server-port=8080
        ports:
        - containerPort: 8080
          name: bb-p2p-http1
---

#
# bb terminus
#
kind: Service
apiVersion: v1
metadata:
  name: bb-terminus
spec:
  clusterIP: None
  selector:
    app: bb-terminus
  ports:
  - name: bb-term-grpc
    port: 9090
    targetPort: 9090
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: bb-terminus
  name: bb-terminus
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: bb-terminus
    spec:
      containers:
      - image: buoyantio/bb:v0.0.3
        imagePullPolicy: IfNotPresent
        name: bb-terminus
        command:
        - "/bin/bash"
        args:
        - "-c"
        - |
          exec \
          /out/bb terminus \
          --grpc-server-port=9090 \
          --response-text=BANANA
          #--terminate-after=$(shuf -i 550-650 -n1) # 10 qps * 10 concurrency * 60 seconds / 10 replicas == 600
        ports:
        - containerPort: 9090
          name: bb-term-grpc
---

#
# Redeploy via kubectl
#
kind: ServiceAccount
apiVersion: v1
metadata:
  name: redeployer
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: lifecycle:redeployer
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["delete", "get", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: lifecycle:redeployer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: lifecycle:redeployer
subjects:
- kind: ServiceAccount
  name: redeployer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redeployer
data:
  redeployer: |-
    #!/bin/sh

    # give deployment time to fully roll out
    sleep 60

    while true; do
      PODS=$(kubectl -n $LIFECYCLE_NS get po --field-selector=status.phase=Running --selector=app=bb-terminus -o jsonpath='{.items[*].metadata.name}')

      SPACES=$(echo "${PODS}" | awk -F" " '{print NF-1}')
      POD_COUNT=$(($SPACES+1))
      echo "found ${POD_COUNT} running pods"

      SLEEP_TIME=60

      # more aggressive restart interval, for smaller deployments
      # restart each pod every minute
      # SLEEP_TIME=$(( 60 / $POD_COUNT))
      # if [ $SLEEP_TIME = 0 ]; then
      #   SLEEP_TIME=1
      # fi

      for POD in ${PODS}; do
        kubectl -n $LIFECYCLE_NS delete po $POD
        echo "sleeping for ${SLEEP_TIME} seconds..."
        sleep $SLEEP_TIME
      done

      # bounce service
      svc=$(kubectl -n $LIFECYCLE_NS get svc/bb-terminus -o json)
      kubectl -n $LIFECYCLE_NS delete svc/bb-terminus
      echo $svc | kubectl -n $LIFECYCLE_NS apply -f -
    done
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: redeployer
  name: redeployer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redeployer
    spec:
      serviceAccount: redeployer
      containers:
      - image: lachlanevenson/k8s-kubectl:v1.10.3
        imagePullPolicy: IfNotPresent
        name: redeployer
        command:
        - "/data/redeployer"
        env:
        - name: LIFECYCLE_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: redeployer
          mountPath: /data
      volumes:
      - name: redeployer
        configMap:
          name: redeployer
          defaultMode: 0744
